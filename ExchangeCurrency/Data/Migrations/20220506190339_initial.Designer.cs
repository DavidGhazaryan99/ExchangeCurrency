// <auto-generated />
using System;
using ExchangeCurrency.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExchangeCurrency.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220506190339_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExchangeCurrency.Models.CurrencyExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("EUR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RUR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("USD")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyExchangeRates");
                });

            modelBuilder.Entity("ExchangeCurrency.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPurchased")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrencyCode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyExchangeRateId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateExecution")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("QuantityReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyExchangeRateId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ExchangeCurrency.Models.Transaction", b =>
                {
                    b.HasOne("ExchangeCurrency.Models.CurrencyExchangeRate", "CurrencyExchangeRate")
                        .WithMany()
                        .HasForeignKey("CurrencyExchangeRateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrencyExchangeRate");
                });
#pragma warning restore 612, 618
        }
    }
}
